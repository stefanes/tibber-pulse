parameters:
  - name: expression
    type: string
  - name: live
    type: boolean
    default: false
  - name: displayName
    type: string

steps:
  - pwsh: |
      Import-Module -Name .\tibber-pulse.psd1 -Force -PassThru

      # Special case for the 'tibber-live' pipeline
      if ([bool]::Parse("${{ parameters.live }}")) {
          Write-Host "##[command]Get-ReadUntil"
          $until = Get-ReadUntil
      }

      # Call provided expression and retry on failure
      $succeedWithIssues = $false
      $failureCount = 0
      $lastFailure = [DateTime]::MinValue
      while ($true) {
          try {
              $expression = "${{ parameters.expression }}"
              Write-Host "##[command]Invoke-Expression -Command `"& $expression`""
              Invoke-Expression -Command "& $expression"
              break # normal exit
          }
          catch {
              # failure, try again...
              $succeedWithIssues = $true
              $failureCount++
              Write-Host "##vso[task.logissue type=warning]Keep calm and carry on... [Recent failures = $failureCount | Last failure = $($lastFailure.ToString('yyyy-MM-dd HH:mm:ss'))] :: $_"

              # if multiple failures within the last minute
              if ([DateTime]::Now -lt $lastFailure.AddMinutes(1)) {
                  $retryWaitTime = [Math]::Min([Math]::Pow($failureCount, 2), 300) # max 5 min
                  Write-Host "Retrying in $retryWaitTime second(s)"
                  Start-Sleep -Seconds $retryWaitTime
              } else {
                  # reset failure count
                  $failureCount = 0
              }

              # update time of last failure
              $lastFailure = [DateTime]::Now
          }
      }

      # Exit with warning if any failures
      if ($succeedWithIssues) {
          Write-Host "##vso[task.complete result=SucceededWithIssues;]DONE"
          exit 0
      }
    displayName: ${{ parameters.displayName }}
    workingDirectory: $(Build.SourcesDirectory)
    retryCountOnTaskFailure: 10 # The maximum allowed number of attempts is 10
    env:
      TIBBER_ACCESS_TOKEN: $(TIBBER_API_KEY)
      TIBBER_USER_AGENT: 'stefanes.tibber-pulse/0.1.1'
      GRAPHITE_ACCESS_TOKEN: $(GF_API_KEY)
